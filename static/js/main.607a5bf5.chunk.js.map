{"version":3,"sources":["assets/opz_dails.png","components/StyledProgressBar.js","components/InstrumentsTrackHandler.js","components/MainMIDI.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","StyledProgressbar","props","color","react_default","a","createElement","style","width","alignItems","padding","dist_default","percentage","text","strokeWidth","styles","root","path","stroke","strokeLinecap","trail","fill","fontSize","blue","red","InstrumentsTrackHandler","ref","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","instrumentTracks","trackNames","currentActiveTrack","parseMessage","bind","assertThisInitialized","handleMessage","moduleOutput","midiCC","setActiveTrack","saveActiveTrack","handleLfoShape","i","trackTemplate","trackName","p1","p2","filter","resonance","attack","decay","sustain","release","depth","rate","dest","shape","shapeVal","fx1","fx2","pan","level","newTrack","create","push","className","Container_default","Card_default","bg","Title","Row_default","Col_default","StyledProgressBar","concat","trackId","message","command","data","note","velocity","length","getTrackId","convertTo100Range","value","Math","ceil","midiMessage","Component","MainMIDI","state","midiAccessSuccess","midiAccessDisplay","inputs","outputs","ModuleOutput","timingClockCount","clock","channel","instrumetComponentEnable","deviceName","deviceId","onMIDISuccess","onMIDIFailure","getMIDIMessage","noteOn","noteOff","clockHandler","updateOutPut","navigator","requestMIDIAccess","then","setState","height","Body","src_components_InstrumentsTrackHandler","midiAccess","displayMessage","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","values","Symbol","iterator","next","done","input","onmidimessage","id","name","err","return","console","log","Output","App","alt","src","require","src_components_MainMIDI","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.607a5bf5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/opz_dails.fbb7093a.png\";","import React from \"react\";\r\nimport CircularProgressbar from \"react-circular-progressbar\";\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\nfunction StyledProgressbar(props) {\r\n    var color = props.color;\r\n    return (\r\n        <div style={{ width: '85px', alignItems:'center', padding:'5px' }}>\r\n                <CircularProgressbar\r\n                    percentage={props.percentage}\r\n                    text={props.text}\r\n                    // Path width must be customized with strokeWidth,\r\n                    // since it informs dimension calculations.\r\n                    strokeWidth={8}\r\n                    // You can override styles either by specifying this \"styles\" prop,\r\n                    // or by overriding the default CSS here:\r\n                    // https://github.com/iqnivek/react-circular-progressbar/blob/master/src/styles.css\r\n                    styles={{\r\n                        // Customize the root svg element\r\n                        root: {},\r\n                        // Customize the path, i.e. the part that's \"complete\"\r\n                        path: {\r\n                            // Tweak path color:\r\n                            stroke: color,\r\n                            // Tweak path to use flat or rounded ends:\r\n                            strokeLinecap: \"butt\",\r\n                            // Tweak transition animation:\r\n                            //transition: \"stroke-dashoffset 0.5s ease 0s\"\r\n                        },\r\n                        // Customize the circle behind the path\r\n                        trail: {\r\n                            // Tweak the trail color:\r\n                            stroke: \"#767777\"\r\n                        },\r\n                        // Customize the text\r\n                        text: {\r\n                            // Tweak text color:\r\n                            fill: \"#f88\",\r\n                            // Tweak text size:\r\n                            fontSize: \"16px\",                            \r\n                        }\r\n                    }}\r\n                />\r\n                                      \r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default StyledProgressbar;\r\n","import React, {Component} from 'react'\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './InstrumentsTrackHandler.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport StyledProgressbar from './StyledProgressBar';\r\n\r\n//colors\r\nconst green = \"#039C53\";\r\nconst blue = \"#0388C0\";\r\nconst yellow = \"#DCA71B\";\r\nconst red = \"#C62937\";\r\nconst grey = \"#787878\";\r\nconst opzGrey = \"#646464\";\r\nconst purple = \"#9e66c1\";\r\n\r\nclass InstrumentsTrackHandler extends Component{\r\n    constructor(props, ref){\r\n        super(props, ref);\r\n        this.instrumentTracks = []\r\n        this.trackNames = [\"Kick\", \"Snare\", \"HiHat\", \"Samples\", \"Bass\", \"Lead\", \"Arp\", \"Chord\"]\r\n        this.currentActiveTrack = {}\r\n\r\n        this.parseMessage = this.parseMessage.bind(this);\r\n        this.handleMessage = this.handleMessage.bind(this);\r\n        this.moduleOutput = this.moduleOutput.bind(this);\r\n        this.midiCC = this.midiCC.bind(this);\r\n        this.setActiveTrack = this.setActiveTrack.bind(this);\r\n        this.saveActiveTrack = this.saveActiveTrack.bind(this);\r\n        this.handleLfoShape = this.handleLfoShape.bind(this);\r\n    };\r\n\r\n    \r\n\r\n    componentWillMount() {\r\n        var trackTemplate = {\r\n            trackName: \"\",\r\n            p1: \"\",\r\n            p2: \"\",\r\n            filter: \"\",\r\n            resonance: \"\",\r\n            attack: \"\",\r\n            decay: \"\",\r\n            sustain: \"\",\r\n            release: \"\",\r\n            depth: \"\",\r\n            rate: \"\",\r\n            dest: \"\",\r\n            shape: \"\",\r\n            shapeVal:\"\",\r\n            fx1: \"\",\r\n            fx2: \"\",\r\n            pan: \"\",\r\n            level: \"\"\r\n        }\r\n\r\n        var i;\r\n        for (i = 0; i <=7; i++) {\r\n            var newTrack = Object.create(trackTemplate);\r\n            this.instrumentTracks.push(newTrack);\r\n            this.instrumentTracks[i].trackName = this.trackNames[i];\r\n        }\r\n    }\r\n\r\n    moduleOutput(){\r\n        return (\r\n            <div className=\"Instrument-tracks-component \">\r\n                <span>\r\n                    <Container>\r\n                        <Card bg='dark' text='info'>\r\n                            <Card.Title>{this.currentActiveTrack.trackName}</Card.Title>\r\n                        </Card>\r\n                        <Card bg=\"dark\" text='white'>\r\n                            <Row>\r\n                                <Col> <Card.Title><b>Parameters</b></Card.Title></Col>\r\n                                <Col><StyledProgressbar percentage={this.currentActiveTrack.p1} text={`P1:${this.currentActiveTrack.p1}`} color={green}/></Col>\r\n                                <Col><StyledProgressbar percentage={this.currentActiveTrack.p2} text={`P2:${this.currentActiveTrack.p2}`} color={blue} /></Col>\r\n                                <Col><StyledProgressbar percentage={this.currentActiveTrack.filter} text={`Filter:${this.currentActiveTrack.filter}`} color={yellow} /></Col>\r\n                                <Col><StyledProgressbar percentage={this.currentActiveTrack.resonance} text={`Reso:${this.currentActiveTrack.resonance}`} color={red} /></Col>\r\n                            </Row>\r\n                        </Card>                    \r\n                        <Card bg=\"dark\" text='success'  >\r\n                            <Row>\r\n                                <Col><Card.Title><b>Envelope</b></Card.Title></Col>\r\n                                <Col><StyledProgressbar percentage={this.currentActiveTrack.attack} text={`A:${this.currentActiveTrack.attack}`} color={green} /></Col>\r\n                                <Col><StyledProgressbar percentage={this.currentActiveTrack.decay} text={`D:${this.currentActiveTrack.decay}`} color={blue} /></Col>\r\n                                <Col><StyledProgressbar percentage={this.currentActiveTrack.sustain} text={`S:${this.currentActiveTrack.sustain}`} color={yellow}  /></Col>\r\n                                <Col><StyledProgressbar percentage={this.currentActiveTrack.release} text={`R:${this.currentActiveTrack.release}`} color={red} /></Col>\r\n                            </Row>\r\n                        </Card>                        \r\n                        <Card bg=\"dark\" style={{ color:purple }}  >\r\n                            <Row>\r\n                                <Col><Card.Title><b>LFO</b></Card.Title></Col>\r\n                                <Col><StyledProgressbar percentage={this.currentActiveTrack.depth} text={`Depth:${this.currentActiveTrack.depth}`} color={green}/></Col>\r\n                                <Col><StyledProgressbar percentage={this.currentActiveTrack.rate} text={`Rate:${this.currentActiveTrack.rate}`} color={blue}/></Col>\r\n                                <Col><StyledProgressbar percentage={this.currentActiveTrack.dest} text={`Target:${this.currentActiveTrack.dest}`} color={yellow}/></Col>\r\n                                <Col><StyledProgressbar percentage={this.currentActiveTrack.shapeVal} text={`${this.currentActiveTrack.shape}`} color={red}/></Col>\r\n                            </Row>                            \r\n                        </Card>\r\n                        <Card bg=\"dark\" style={{ color: yellow }}  >\r\n                            <Row>\r\n                                <Col><Card.Title><b>Master</b></Card.Title></Col>\r\n                                <Col><StyledProgressbar percentage={this.currentActiveTrack.fx1} text={`Fx1:${this.currentActiveTrack.fx1}`} color={green} /></Col>\r\n                                <Col><StyledProgressbar percentage={this.currentActiveTrack.fx2} text={`Fx2:${this.currentActiveTrack.fx2}`} color={blue} /></Col>\r\n                                <Col><StyledProgressbar percentage={this.currentActiveTrack.pan} text={`Pan:${this.currentActiveTrack.pan}`} color={yellow} /></Col>\r\n                                <Col><StyledProgressbar percentage={this.currentActiveTrack.level} text={`Level:${this.currentActiveTrack.level}`} color={red}  /></Col>\r\n                            </Row>                            \r\n                        </Card>\r\n                        \r\n                    </Container>\r\n\r\n                </span>\r\n            </div>\r\n        );\r\n        \r\n                 \r\n    }\r\n\r\n    \r\n    setActiveTrack(trackId){\r\n        this.currentActiveTrack = this.instrumentTracks[trackId];\r\n    }\r\n\r\n    saveActiveTrack(trackId){\r\n        this.instrumentTracks[trackId] = this.currentActiveTrack;\r\n    }\r\n\r\n    parseMessage(message){\r\n        var command = message.data[0];\r\n        var note = message.data[1];\r\n        var velocity = (message.data.length > 2) ? message.data[2] : 0; // a velocity value might not be included with a noteOff command\r\n        var trackId = this.getTrackId(command);\r\n        this.setActiveTrack(trackId);\r\n        if (command > 175 && command < 184){\r\n            this.midiCC(note, velocity);\r\n        }              \r\n        \r\n        this.saveActiveTrack(trackId);\r\n    }\r\n\r\n    \r\n\r\n\r\n    midiCC(note, velocity){\r\n        switch(note){\r\n            case 1:\r\n                this.currentActiveTrack.p1 = this.convertTo100Range(velocity);\r\n                break;\r\n            case 2:\r\n                this.currentActiveTrack.p2 = this.convertTo100Range(velocity);\r\n                break;\r\n            case 3:\r\n                this.currentActiveTrack.filter = this.convertTo100Range(velocity);\r\n                break;\r\n            case 4:\r\n                this.currentActiveTrack.resonance = this.convertTo100Range(velocity);\r\n                break;\r\n            case 5:\r\n                this.currentActiveTrack.attack = this.convertTo100Range(velocity);\r\n                break;\r\n            case 6:\r\n                this.currentActiveTrack.decay = this.convertTo100Range(velocity);\r\n                break;\r\n            case 7:\r\n                this.currentActiveTrack.sustain = this.convertTo100Range(velocity);\r\n                break;\r\n            case 8:\r\n                this.currentActiveTrack.release = this.convertTo100Range(velocity);\r\n                break;\r\n            case 9:\r\n                this.currentActiveTrack.depth = this.convertTo100Range(velocity);\r\n                break;\r\n            case 10:\r\n                this.currentActiveTrack.rate = this.convertTo100Range(velocity);\r\n                break;\r\n            case 11:\r\n                this.currentActiveTrack.dest = this.convertTo100Range(velocity);\r\n                break;\r\n            case 12:\r\n                this.currentActiveTrack.shapeVal = this.convertTo100Range(velocity);\r\n                this.handleLfoShape(this.currentActiveTrack.shapeVal);\r\n                break;\r\n            case 13:\r\n                this.currentActiveTrack.fx1 = this.convertTo100Range(velocity);\r\n                break;\r\n            case 14:\r\n                this.currentActiveTrack.fx2 = this.convertTo100Range(velocity);\r\n                break;\r\n            case 15:\r\n                this.currentActiveTrack.pan = this.convertTo100Range(velocity);\r\n                break;\r\n            case 16:\r\n                this.currentActiveTrack.level = this.convertTo100Range(velocity);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    handleLfoShape(value){\r\n        if(value === 0){\r\n            this.currentActiveTrack.shape = \"Free\";\r\n        }\r\n        else if(value === 100){\r\n            this.currentActiveTrack.shape = \"Trig\";\r\n        }\r\n        else if(value === 50){\r\n            this.currentActiveTrack.shape = \"Sqr\";\r\n        }\r\n        else if(value>0 && value<50){\r\n            this.currentActiveTrack.shape = \"fr-sq\"\r\n        }\r\n        else if (value > 50 && value < 100) {\r\n            this.currentActiveTrack.shape = \"sq-tr\"\r\n        }\r\n    }\r\n\r\n    convertTo100Range(value){\r\n        return  Math.ceil((value*100)/127);\r\n    }\r\n\r\n    getTrackId(command) {\r\n        var trackId = 0\r\n        switch (command) {\r\n            case 176:\r\n                trackId = 0;\r\n                break;\r\n            case 177:\r\n                trackId = 1;\r\n                break;\r\n            case 178:\r\n                trackId = 2;\r\n                break;\r\n            case 179:\r\n                trackId = 3;\r\n                break;\r\n            case 180:\r\n                trackId = 4;\r\n                break;\r\n            case 181:\r\n                trackId = 5;\r\n                break;\r\n            case 182:\r\n                trackId = 6;\r\n                break;\r\n            case 183:\r\n                trackId = 7;\r\n                break;\r\n            case 144:\r\n                trackId = 0;\r\n                break;\r\n            case 145:\r\n                trackId = 1;\r\n                break;\r\n            case 146:\r\n                trackId = 2;\r\n                break;\r\n            case 147:\r\n                trackId = 3;\r\n                break;\r\n            case 148:\r\n                trackId = 4;\r\n                break;\r\n            case 149:\r\n                trackId = 5;\r\n                break;\r\n            case 150:\r\n                trackId = 6;\r\n                break;\r\n            case 151:\r\n                trackId = 7;\r\n                break;\r\n            default:\r\n                trackId = 0;\r\n                break;\r\n        }\r\n        \r\n        return trackId;\r\n    }\r\n    \r\n    handleMessage(midiMessage){\r\n        this.parseMessage(midiMessage);        \r\n        return this.moduleOutput();\r\n    }    \r\n\r\n    render(){\r\n        return(\r\n            this.handleMessage(this.props.message)\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default InstrumentsTrackHandler;","import React, { Component } from 'react'\r\nimport './MainMIDI.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport InstrumentTrackComponent from './InstrumentsTrackHandler';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nclass MainMIDI extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            midiAccessSuccess: false,\r\n            midiAccessDisplay:\"\",\r\n            inputs: {},\r\n            outputs: {},\r\n            ModuleOutput:\"\",\r\n            timingClockCount:0,\r\n            clock:1,\r\n            channel:1,\r\n            note:\"C\",\r\n            velocity:0\r\n        };\r\n\r\n        this.midiMessage = \"\";\r\n        this.instrumetComponentEnable = false;\r\n        this.deviceName = \"\";\r\n        this.deviceId = \"\";\r\n\r\n        // Bind all the functions\r\n        this.onMIDISuccess = this.onMIDISuccess.bind(this);\r\n        this.onMIDIFailure = this.onMIDIFailure.bind(this);\r\n        this.getMIDIMessage = this.getMIDIMessage.bind(this);\r\n        this.noteOn = this.noteOn.bind(this);\r\n        this.noteOff = this.noteOff.bind(this);\r\n        this.clockHandler = this.clockHandler.bind(this);\r\n        this.updateOutPut = this.updateOutPut.bind(this);\r\n    };\r\n\r\n    \r\n    //This is inbuilt function that get's executed before the component is mounted.\r\n    componentWillMount(){\r\n        navigator.requestMIDIAccess()\r\n            .then(this.onMIDISuccess, this.onMIDIFailure);\r\n    }\r\n\r\n    updateOutPut(){\r\n        this.setState({\r\n            ModuleOutput:\r\n                <div className=\"OutputModule\"> \r\n                    <Card bg='dark' style={{ height: '6rem' }}>\r\n                        <Card.Body>\r\n                            <Container>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <div style={{width:'70px', padding:'2px'}}>\r\n                                            {this.state.midiAccessDisplay}\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <div className=\"DeviceDetails\">\r\n                                            <b>Device:</b> {this.deviceName} &nbsp;<b>ID:</b> {this.deviceId}\r\n                                            <br/>\r\n                                            <b>Clock:</b> {this.state.clock}\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Container>\r\n                        </Card.Body>\r\n\r\n                    </Card>\r\n                    <Card bg='dark'>\r\n                        <div>\r\n                            {this.instrumetComponentEnable && <InstrumentTrackComponent message={this.midiMessage} />}\r\n                        </div>\r\n                    </Card>                    \r\n                </div>\r\n        });\r\n    }\r\n    \r\n\r\n    Output() {\r\n            return <div>{this.state.ModuleOutput}</div>            \r\n    }\r\n\r\n    onMIDISuccess(midiAccess){\r\n        this.setState({\r\n            midiAccessSuccess: true,\r\n            inputs: midiAccess.inputs,\r\n            outputs: midiAccess.outputs,\r\n            displayMessage: \"This browser supports MIDI input\",\r\n            midiAccessDisplay: <Card bg='success' text='dark'> [I] </Card>\r\n         });\r\n\r\n         for(var input of midiAccess.inputs.values()){\r\n            input.onmidimessage = this.getMIDIMessage;\r\n            this.deviceId = input.id;\r\n            this.deviceName = input.name;\r\n        }\r\n\r\n        console.log(\"MIDI Access successful\");\r\n        console.log(midiAccess);\r\n\r\n    }\r\n\r\n    onMIDIFailure(){\r\n        this.setState({\r\n            midiAccessSuccess: false,\r\n            displayMessage: \"WebMIDI is not supported by this browser\",\r\n            midiAccessDisplay: <Card bg='danger' text='dark'> [0] </Card>\r\n        });\r\n        console.log('WebMIDI is not supported by this browser.');\r\n    }\r\n\r\n    getMIDIMessage(message) {\r\n        var command = message.data[0];\r\n        var note = message.data[1];\r\n        var velocity = (message.data.length > 2) ? message.data[2] : 0; // a velocity value might not be included with a noteOff command\r\n\r\n        if(command !== 248)\r\n        {\r\n            console.log(\"Command:\"+ command + \", Note:\" + note + \",Velocity:\" + velocity)\r\n        }\r\n\r\n        //if(command >175 && command<184){\r\n        if ((command > 143 && command < 152) || (command > 175 && command < 184)){\r\n            this.midiMessage = message;\r\n            this.instrumetComponentEnable = true;\r\n            //console.log(\"Command:\"+ command + \", Note:\" + note + \",Velocity:\" + velocity);\r\n            this.updateOutPut();\r\n        }\r\n        \r\n        if( command < 144) // Note Off messages for channels\r\n        {\r\n            this.noteOff(note);\r\n        }\r\n        else if( command < 159) // Note channels\r\n        {\r\n            if (velocity > 0) {\r\n                console.log(\"Command:\"+ command + \", Note:\" + note + \",Velocity:\" + velocity)\r\n                this.noteOn(command, note, velocity);\r\n            } else {\r\n                this.noteOff(note);\r\n            }\r\n        }\r\n        else if(command === 248) // Timing clock message\r\n        {\r\n            this.clockHandler();\r\n        }\r\n\r\n    }\r\n    \r\n    noteOn(command, note, velocity){\r\n        this.setState({\r\n            channel: command,\r\n            note: note,\r\n            velocity: velocity \r\n        });\r\n        this.updateOutPut();\r\n    }\r\n\r\n    noteOff(note){\r\n        this.setState({\r\n            note: note,\r\n            velocity: 0\r\n        })\r\n        this.updateOutPut();\r\n    }\r\n\r\n    clockHandler(){\r\n        if(this.state.timingClockCount < 24)\r\n            {\r\n                this.setState({\r\n                    timingClockCount: this.state.timingClockCount + 1\r\n                });\r\n            }\r\n        else{\r\n            this.setState({\r\n                timingClockCount: 0,\r\n                clock: this.state.clock + 1\r\n            });\r\n            if(this.state.clock>4){\r\n                this.setState({\r\n                    clock: 1\r\n                });\r\n            }\r\n\r\n        }\r\n        this.updateOutPut();\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            this.Output()\r\n         ); \r\n        \r\n    }\r\n}\r\n\r\nexport default MainMIDI;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport MainMIDI from './components/MainMIDI';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <img className=\"App-logo\" alt=\"OPZ Dails\" src={ require(\"./assets/opz_dails.png\") } />          \r\n        </header>        \r\n        <div>          \r\n            <MainMIDI/>                  \r\n        </div>\r\n               \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}